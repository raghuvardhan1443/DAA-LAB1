def permuteUnique(nums):
    def backtrack(path, used):
        if len(path) == len(nums):
            result.append(path[:])
            return
        
        for i in range(len(nums)):
            if i > 0 and nums[i] == nums[i - 1] and not used[i - 1]:
                continue
            if not used[i]:
                used[i] = True
                path.append(nums[i])
                backtrack(path, used)
                path.pop()
                used[i] = False

    nums.sort()  
    result = []
    used = [False] * len(nums)  
    backtrack([], used)
    return result

nums = [1, 1, 2]
print(permuteUnique(nums)) 
