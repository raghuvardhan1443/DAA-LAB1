
#include <stdio.h>
#include <stdlib.h>

#define MAX_SUBSETS 1024 

void subset_sums(int *arr, int size, int *sums, int *count) {
    int subset_count = 1 << size; // 2^size possible subsets
    *count = 0;
    
    for (int i = 0; i < subset_count; i++) {
        int sum = 0;
        for (int j = 0; j < size; j++) {
            if (i & (1 << j)) { 
                sum += arr[j];
            }
        }
        sums[(*count)++] = sum;
    }
}

int meet_in_the_middle(int *arr, int size, int target) {
    int mid = size / 2;
    
    int left_size = mid;
    int right_size = size - mid;
    
    int left_sums[MAX_SUBSETS], right_sums[MAX_SUBSETS];
    int left_count, right_count;
    
    subset_sums(arr, left_size, left_sums, &left_count);
    subset_sums(arr + mid, right_size, right_sums, &right_count);
    
    for (int i = 0; i < left_count; i++) {
        for (int j = 0; j < right_count; j++) {
            if (left_sums[i] + right_sums[j] == target) {
                return 1; 
            }
        }
    }
    
    return 0; 
}

int main() {
    int arr[] = {3, 34, 4, 12, 5, 2};
    int size = sizeof(arr) / sizeof(arr[0]);
    int target = 9;
    
    if (meet_in_the_middle(arr, size, target)) {
        printf("A subset with sum %d exists.\n", target);
    } else {
        printf("No subset with sum %d exists.\n", target);
    }
    
    return 0;
}
